import json
from json.decoder import JSONDecodeError

from PythonLessons.lessons_8 import upper

# –ó–∞–¥–∞—á–∞ 3 ‚Äî –°–ø–∏—Å–∫–∏
# –î–∞–Ω —Å–ø–∏—Å–æ–∫:
nums = [5, 0, -3, 8, 5, -3, 10]
# –ù—É–∂–Ω–æ:
# –£–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞.
# –£–±—Ä–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã.
# –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é.
# –ò –≤—ã–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

list_comprehension = [x for x in nums if x >= 0]
num = sorted(list(set(list_comprehension)))
print(num)

# –ó–∞–¥–∞—á–∞ 4 ‚Äî –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
# –î–∞–Ω–æ —á–∏—Å–ª–æ n.
# –ù—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É:
# –µ—Å–ª–∏ n –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 3 ‚Üí –≤—ã–≤–µ—Å—Ç–∏ "Fizz",
# –µ—Å–ª–∏ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 5 ‚Üí –≤—ã–≤–µ—Å—Ç–∏ "Buzz",
# –µ—Å–ª–∏ –¥–µ–ª–∏—Ç—Å—è –∏ –Ω–∞ 3, –∏ –Ω–∞ 5 ‚Üí –≤—ã–≤–µ—Å—Ç–∏ "FizzBuzz",
# –∏–Ω–∞—á–µ ‚Üí –≤—ã–≤–µ—Å—Ç–∏ —Å–∞–º–æ —á–∏—Å–ª–æ.

n = 15

if n % 3 == 0 and n % 5 == 0:
    print("FizzBuzz")
elif n % 5 ==0:
    print("Buzz")
elif n % 3 == 0:
    print("Fizz")
else:
    print(n)


# –ó–∞–¥–∞—á–∞ 5 ‚Äî –°–ª–æ–≤–∞—Ä–∏
# –î–∞–Ω —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:
user = {
    "name": "–ê–ª–µ–∫—Å–µ–π",
    "age": 25,
    "city": "–ú–æ—Å–∫–≤–∞"
}
# –ù—É–∂–Ω–æ:
# –£–≤–µ–ª–∏—á–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç –Ω–∞ 1.
# –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á "email" —Å –ª—é–±—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º.
# –£–¥–∞–ª–∏—Ç—å –∫–ª—é—á "city".
# –í—ã–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å.

user["email"] = "name@example.com"
del user["city"]
user["age"] +=1

print(user)

# –∞–¥–∞—á–∞ 6 ‚Äî –¶–∏–∫–ª—ã
# –ù—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 30,
# –Ω–æ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª—è—Ç—Å—è –Ω–∞ 7.

for i in range(1,31):
    if i % 7 == 0:
        continue
    print(i)

i = 1
while i <= 30:
    if i % 7 == 0:
        i += 1
        continue
    print(i)
    i +=1

# –ó–∞–¥–∞—á–∞ 7 ‚Äî –¶–∏–∫–ª—ã —Å continue
# –í—ã–≤–µ–¥–∏ –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 50,
# –Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏:
# —Ç–µ, —á—Ç–æ –¥–µ–ª—è—Ç—Å—è –Ω–∞ 4,
# –∏ —Ç–µ, —á—Ç–æ –¥–µ–ª—è—Ç—Å—è –Ω–∞ 9.


for i in range(1,51):
    if i % 4 == 0 or i % 9 == 0:
        continue
    print(i)

i = 1
while i <= 50:
    if i % 4 == 0 or i % 9 ==0:
        i += 1
        continue
    print(i)
    i += 1


# –ó–∞–¥–∞—á–∞ 8 ‚Äî –§–∞–π–ª—ã
# –°–æ–∑–¥–∞–π —Ñ–∞–π–ª numbers.txt –∏ –∑–∞–ø–∏—à–∏ –≤ –Ω–µ–≥–æ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 20, –∫–∞–∂–¥–æ–µ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.
# –ü–æ—Ç–æ–º –æ—Ç–∫—Ä–æ–π —ç—Ç–æ—Ç —Ñ–∞–π–ª –¥–ª—è —á—Ç–µ–Ω–∏—è.
# –í—ã–≤–µ–¥–∏ –Ω–∞ —ç–∫—Ä–∞–Ω —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ —á–∏—Å–ª–æ —á—ë—Ç–Ω–æ–µ.

with open("numbers.txt", "w") as file:
    lines = [str(i) + "\n" for i in range(1,21)]
    file.writelines(lines)

with open("numbers.txt", "r") as file:
    lines = file.readlines()
    for i in lines:
        num = int(i.strip())
        if num % 2 ==0:
            print(num)

# –ó–∞–¥–∞—á–∞ 9 ‚Äî –§—É–Ω–∫—Ü–∏–∏
# –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é square_or_double(n), –∫–æ—Ç–æ—Ä–∞—è:
# –µ—Å–ª–∏ —á–∏—Å–ª–æ —á—ë—Ç–Ω–æ–µ ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç,
# –µ—Å–ª–∏ –Ω–µ—á—ë—Ç–Ω–æ–µ ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–¥–≤–æ–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.


def square_or_double(n):
    if n % 2 == 0:
       return n ** 2
    else:
        return n * 2

print(square_or_double(4))


# –∞–¥–∞—á–∞ 10 ‚Äî –§—É–Ω–∫—Ü–∏–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
# –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é compare_numbers(a, b), –∫–æ—Ç–æ—Ä–∞—è:
# –µ—Å–ª–∏ a > b ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É "–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ",
# –µ—Å–ª–∏ a < b ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É "–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ",
# –µ—Å–ª–∏ —Ä–∞–≤–Ω—ã ‚Üí –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É "–ß–∏—Å–ª–∞ —Ä–∞–≤–Ω—ã".
# üìå –ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ç—É—Ç –Ω—É–∂–Ω–æ 3 –≤–µ—Ç–∫–∏ —É—Å–ª–æ–≤–∏–π ‚Äî if, elif, else.

def compare_numbers(a, b):
    if a > b:
        return f"–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ"
    elif a < b:
        return f"–í—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ"
    else:
        return f"–ß–∏—Å–ª–∞ —Ä–∞–≤–Ω—ã"
print(compare_numbers(2,5))


# –ó–∞–¥–∞—á–∞ 11 ‚Äî –û–û–ü (—á–∞—Å—Ç—å 1)
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Book, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å –¥–≤–∞ –∞—Ç—Ä–∏–±—É—Ç–∞:
# title (–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏),
# author (–∞–≤—Ç–æ—Ä –∫–Ω–∏–≥–∏).
# –ó–∞–¥–∞—á–∏:
# –°–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞ —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–¥–∞–≤–∞–ª–∏—Å—å —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (__init__).
# –°–æ–∑–¥–∞–π –æ–±—ä–µ–∫—Ç —Å –ª—é–±—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.
# –í—ã–≤–µ–¥–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä–∞ —ç—Ç–æ–π –∫–Ω–∏–≥–∏.

class Book:
    def __init__(self,title,author):
        self.title = title
        self.author = author

    def __str__(self):
        return f"{self.title} - {self.author}"


book = Book("–ú–æ—Ä—è–∫ –∏ –º–æ—Ä–µ", "–°–∞—Ä–¥–µ–ª—å–∫–∏")
print(book)

# –ó–∞–¥–∞—á–∞ 12 ‚Äî –û–û–ü (—á–∞—Å—Ç—å 2)
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Dog, —É –∫–æ—Ç–æ—Ä–æ–≥–æ:
# –µ—Å—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã name (–∫–ª–∏—á–∫–∞) –∏ age (–≤–æ–∑—Ä–∞—Å—Ç), –∑–∞–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ __init__,
# –µ—Å—Ç—å –º–µ—Ç–æ–¥ bark(), –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É "–ì–∞–≤-–≥–∞–≤! –ú–µ–Ω—è –∑–æ–≤—É—Ç {name}",
# –µ—Å—Ç—å –º–µ—Ç–æ–¥ get_age_in_human_years(),
# –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç —Å–æ–±–∞–∫–∏ –≤ ¬´—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏—Ö –≥–æ–¥–∞—Ö¬ª (–≤–æ–∑—å–º–∏ —É—Å–ª–æ–≤–Ω–æ: 1 –≥–æ–¥ —Å–æ–±–∞–∫–∏ = 7 –ª–µ—Ç —á–µ–ª–æ–≤–µ–∫–∞).

class Dog:

    def __init__(self,name,age):
        self.name = name
        self.age =age

    def bark(self):
        return f"–ì–∞–≤-–≥–∞–≤! –ú–µ–Ω—è –∑–æ–≤—É—Ç {self.name}"

    def get_age_in_human_years(self):
        return f"–í–æ–∑—Ä–∞—Å—Ç —Å–æ–±–∞–∫–∏ –≤ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏—Ö –≥–æ–¥–∞—Ö {self.age * 7}"

dog = Dog("–†–æ—Ç–∏–∫", 15)
print(dog.bark())
print(dog.get_age_in_human_years())


# üîπ –ó–∞–¥–∞—á–∞ 13 ‚Äî –û–û–ü (–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ)
# –°–æ–∑–¥–∞–π –¥–≤–∞ –∫–ª–∞—Å—Å–∞:
# –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å Animal
# –∞—Ç—Ä–∏–±—É—Ç name (–∏–º—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ),
# –º–µ—Ç–æ–¥ sleep() ‚Üí –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É "–ñ–∏–≤–æ—Ç–Ω–æ–µ {name} —Å–ø–∏—Ç".
# –î–æ—á–µ—Ä–Ω–∏–π –∫–ª–∞—Å—Å Cat, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç Animal:
# –∏–º–µ–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ meow() ‚Üí –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É "–ö–æ—Ç {name} –≥–æ–≤–æ—Ä–∏—Ç: –ú—è—É!".
# –ó–∞–¥–∞—á–∏:
# –°–æ–∑–¥–∞–π –æ–±—ä–µ–∫—Ç –∫–æ—Ç–∞ —Å –∏–º–µ–Ω–µ–º.
# –í—ã–∑–æ–≤–∏ —É –Ω–µ–≥–æ –º–µ—Ç–æ–¥ sleep() –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞.
# –í—ã–∑–æ–≤–∏ –º–µ—Ç–æ–¥ meow() –∏–∑ –¥–æ—á–µ—Ä–Ω–µ–≥–æ –∫–ª–∞—Å—Å–∞.


class Animal:

    def __init__(self,name,):
        self.name = name

    def sleep(self):
        return f"–ñ–∏–≤–æ—Ç–Ω–æ–µ {self.name} —Å–ø–∏—Ç"

class Cat(Animal):

     def __init__(self,name):
         super().__init__(name)

     def meow(self):
         return f"–ö–æ—Ç {self.name} –≥–æ–≤–æ—Ä–∏—Ç: –ú—è—É!"

animal = Animal("Karry")
print(animal.name)
print(animal.sleep())

cat = Cat("Karry")
print(cat.sleep())
print(cat.meow())


# –ó–∞–¥–∞—á–∞ 14 ‚Äî –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
# –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è:
# –ü—Ä–æ—Å–∏—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ (—á–µ—Ä–µ–∑ input).
# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤–≤–æ–¥ –≤ int.
# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–µ —á–∏—Å–ª–æ ‚Üí –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –ø–∞–¥–∞–µ—Ç,
# –∞ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ "–û—à–∏–±–∫–∞: –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!".


# try:
#     integer = int(input("–≤–≤–µ–¥–∏ —á–∏—Å–ª–æ: "))
#
# except ValueError:
#     print(" –≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ , –í–≤–µ–¥–∏ —á–∏—Å–ª–æ!")
#
# else:
#     print(integer)

# –ó–∞–¥–∞—á–∞ 15 ‚Äî –§–∞–π–ª—ã + –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
# –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è:
# –ü—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º data.txt –¥–ª—è —á—Ç–µ–Ω–∏—è.
# –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç ‚Üí –Ω–µ –ø–∞–¥–∞–µ—Ç, –∞ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!".
# –ï—Å–ª–∏ —Ñ–∞–π–ª –µ—Å—Ç—å ‚Üí —á–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏ –ø–µ—á–∞—Ç–∞–µ—Ç –µ–≥–æ –Ω–∞ —ç–∫—Ä–∞–Ω.
# –ü–æ–¥—Å–∫–∞–∑–∫–∞: –∑–¥–µ—Å—å –≤ try –ø–æ–π–¥—ë—Ç open("data.txt", "r"), –∞ –≤ except –Ω—É–∂–Ω–æ –ø–æ–π–º–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ FileNotFoundError.
# –•–æ—á–µ—à—å, —è –Ω–∞–º–µ–∫–Ω—É, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å with open(...) –≤–Ω—É—Ç—Ä–∏ try, —á—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–ª—Å—è —Ñ–∞–π–ª?

# try:
#     with open("data.txt", "r") as file:
#         line = file.read()
#         print(line)
# except FileNotFoundError:
#     print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–π –µ–≥–æ!")
#
#
#
# with open("json.json", "r") as file:
#     data = json.load(file)
#     for i in data:
#         if i.get("age") and i.get("email"):
#             if i.get("age") >= 18:
#                 print(i.get("email"))


# –ó–∞–¥–∞—á–∞:
# –£ —Ç–µ–±—è –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –º–∞–≥–∞–∑–∏–Ω–µ:
products = [
    {"name": "Laptop", "price": 1200, "quantity": 4},
    {"name": "Phone", "price": 800, "quantity": 10},
    {"name": "Keyboard", "price": 50, "quantity": 0},
    {"name": "Monitor", "price": 300, "quantity": 5},
    {"name": "Mouse", "price": 25, "quantity": 20},
]
# –¢—Ä–µ–±—É–µ—Ç—Å—è:
# –û—Ç–æ–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ —Ç–æ–≤–∞—Ä—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö quantity > 0.
# –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –ø–æ —Ü–µ–Ω–µ (–æ—Ç –¥–µ—à—ë–≤—ã—Ö –∫ –¥–æ—Ä–æ–≥–∏–º).
# –í—ã–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ç–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ.
sorted_products = sorted(products,key=lambda x:x["price"])
for i in sorted_products:
    if i["quantity"] > 0:
        print(i)


# –ó–∞–¥–∞—á–∞ 1: –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä–æ–∫–∏
# –£—Å–ª–æ–≤–∏–µ:
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ª—é–±—É—é —Å—Ç—Ä–æ–∫—É –∏ –∑–∞—Ç–µ–º:
# –í—ã–≤–æ–¥–∏—Ç –µ–µ –¥–ª–∏–Ω—É.
# –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –µ–µ –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.
# –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º (
# —á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ –∏ —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ,
# –Ω–∞–ø—Ä–∏–º–µ—Ä, "–∞–Ω–Ω–∞").
# –†–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤ –Ω–µ –¥–æ–ª–∂–µ–Ω —É—á–∏—Ç—ã–≤–∞—Ç—å—Å—è.
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ True –∏–ª–∏ False.
#
# string_string = input()
# len_string = len(string_string)
# upper_string = string_string.upper()
# polindrom = string_string.lower() == string_string[::-1].lower()
# print(string_string)
# print(len_string)
# print(upper_string)
# print(polindrom)


# –ó–∞–¥–∞—á–∞ 2 (–ê–∫—Ç—É–∞–ª—å–Ω–∞—è): –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —á–∏—Å–µ–ª
# –£—Å–ª–æ–≤–∏–µ:
# –£ –≤–∞—Å –µ—Å—Ç—å –≥–æ—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª (–¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –±—ã –ø—Ä–∏–π—Ç–∏ –∏–∑ –¥—Ä—É–≥–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ –æ—Ç —Å–∏—Å—Ç–µ–º—ã):
numbers = [15, 62, 84, 33, 71, 90, 22, 48, 97, 3, 66, 101, 28, 55, 77, 12, 39, 88, 51, 24]
# –í–∞—à–∞ –∑–∞–¥–∞—á–∞:
# –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ —á–∏—Å–ª–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ:
# –ë–æ–ª—å—à–µ 50.
# –ò —è–≤–ª—è—é—Ç—Å—è —á–µ—Ç–Ω—ã–º–∏.
# –í—ã–≤–µ–¥–∏—Ç–µ –æ–±–∞ —Å–ø–∏—Å–∫–∞: –∏—Å—Ö–æ–¥–Ω—ã–π –∏ –Ω–æ–≤—ã–π.
# –¶–µ–ª—å: –û—Ç—Ä–∞–±–æ—Ç–∫–∞ —Ü–∏–∫–ª–∞ for, —É—Å–ª–æ–≤–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ if –∏ –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ and –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
# –ü–æ–¥—Å–∫–∞–∑–∫–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):
# –í–∞–º –Ω–µ –Ω—É–∂–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫, –æ–Ω —É–∂–µ –¥–∞–Ω. –ü—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é numbers —ç—Ç–∏–º —Å–ø–∏—Å–∫–æ–º.
# –í–∞—à–∞ –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –Ω–µ–º—É —Ü–∏–∫–ª–æ–º –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.

listed_numbers = []
for i in numbers:
    if i > 50 and i %2 == 0:
        listed_numbers.append(i)


print(listed_numbers)
print(numbers)
